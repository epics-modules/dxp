# 16element.db
# Author:  Mark Rivers
# Date:    March 20, 2000
# Modifications:
# 03-APR-2000  MLR  Added SIS scaler for ICR
# 07-SEP-2000  MLR  Changed to have links be CA links to allow parallel
#                   processing.  Use new ERST field for efficient Erase/Start.
#                   Add BUSY record so scans will wait with CA links.
# 20-JUN-2001  MLR  Created this version for DXP MCAs. Deleted ICR scaler.

# 13-JUN-2002  MN   downgraded 16 elements to 8 elements for testing
# Database for 8 (was 16) element detector with DXP4C or DXP2X MCAs from XIA.

grecord(dfanout,"$(P)EraseAll") {
        field(VAL, "1")
        field(OUTA,"$(P)mca1.ERAS  CA MS")
        field(OUTB,"$(P)mca2.ERAS  CA MS")
        field(OUTC,"$(P)mca3.ERAS  CA MS")
        field(OUTD,"$(P)mca4.ERAS  CA MS")
        field(OUTE,"$(P)mca5.ERAS  CA MS")
        field(OUTF,"$(P)mca6.ERAS  CA MS")
        field(OUTG,"$(P)mca7.ERAS  CA MS")
        field(OUTH,"$(P)mca8.ERAS  CA MS")
}

grecord(dfanout,"$(P)EraseStart") {
        field(VAL, "1")
        field(OUTA,"$(P)mca1.ERST  CA MS")
        field(OUTB,"$(P)mca5.ERST  CA MS")
        field(OUTF,"$(P)AcquireBusy PP MS")
        field(FLNK,"$(P)SetClientWait")
}

grecord(dfanout,"$(P)StartAll") {
        field(VAL, "1")
        field(OUTA,"$(P)mca1.STRT  CA MS")
        field(OUTB,"$(P)mca5.STRT  CA MS")
        field(OUTF,"$(P)AcquireBusy PP MS")
        field(FLNK,"$(P)SetClientWait")
}

grecord(busy,"$(P)AcquireBusy") {
}

grecord(dfanout,"$(P)StopAll") {
        field(VAL, "1")
        field(OUTA,"$(P)mca1.STOP  CA MS")
        field(OUTB,"$(P)mca5.STOP  CA MS")
}

grecord(dfanout,"$(P)PresetReal") {
        field(DOL, "$(P)PresetReal.VAL")
        field(OMSL, "closed_loop")
        field(OUTA,"$(P)mca1.PRTM  CA MS")
        field(OUTB,"$(P)mca2.PRTM  CA MS")
        field(OUTC,"$(P)mca3.PRTM  CA MS")
        field(OUTD,"$(P)mca4.PRTM  CA MS")
        field(OUTE,"$(P)mca5.PRTM  CA MS")
        field(OUTF,"$(P)mca6.PRTM  CA MS")
        field(OUTG,"$(P)mca7.PRTM  CA MS")
        field(OUTH,"$(P)mca8.PRTM  CA MS")
        field(PREC, "2")
}

grecord(dfanout,"$(P)PresetLive") {
        field(DOL, "$(P)PresetLive.VAL")
        field(OMSL, "closed_loop")
        field(OUTA,"$(P)mca1.PLTM  CA MS")
        field(OUTB,"$(P)mca2.PLTM  CA MS")
        field(OUTC,"$(P)mca3.PLTM  CA MS")
        field(OUTD,"$(P)mca4.PLTM  CA MS")
        field(OUTE,"$(P)mca5.PLTM  CA MS")
        field(OUTF,"$(P)mca6.PLTM  CA MS")
        field(OUTG,"$(P)mca7.PLTM  CA MS")
        field(OUTH,"$(P)mca8.PLTM  CA MS")
        field(PREC, "2")
}


grecord(calcout,"$(P)Acquiring") {
        field(CALC, "(A+B+C+D+E+F+G+H)>0")
        field(INPA,"$(P)mca1.ACQG  CP MS")
        field(INPB,"$(P)mca2.ACQG  CP MS")
        field(INPC,"$(P)mca3.ACQG  CP MS")
        field(INPD,"$(P)mca4.ACQG  CP MS")
        field(INPE,"$(P)mca5.ACQG  CP MS")
        field(INPF,"$(P)mca6.ACQG  CP MS")
        field(INPG,"$(P)mca7.ACQG  CP MS")
        field(INPH,"$(P)mca8.ACQG  CP MS")
        field(OOPT,"Transition To Zero")
        field(OUT, "$(P)AcquireDone.PROC PP MS")
}


grecord(dfanout,"$(P)AcquireDone") {
        field(VAL, "0")
        field(OUTA,"$(P)AcquireBusy.VAL PP MS")
}

grecord(calcout,"$(P)ElapsedReal") {
        field(CALC, "MIN(A,B)")
        field(INPA,"$(P)mca1.ERTM  CP MS")
        field(INPB,"$(P)mca5.ERTM  CP MS")
        field(PREC, "2")
}

grecord(calcout,"$(P)ElapsedLive") {
        field(CALC, "MIN(A,B)")
        field(INPA,"$(P)mca1.ELTM  CP MS")
        field(INPB,"$(P)mca5.ELTM  CP MS")
        field(PREC, "2")
}

grecord(calcout,"$(P)DeadTime") {
        field(CALC, "MAX(MAX(MAX(MAX(A,B),C),D),E)")
        field(INPA,"$(P)mca1.IDTIM  CP MS")
        field(INPB,"$(P)mca2.IDTIM  CP MS")
        field(INPC,"$(P)mca3.IDTIM  CP MS")
        field(INPD,"$(P)mca4.IDTIM  CP MS")
        field(INPE,"$(P)DeadTime1   CP MS")
        field(PREC, "2")
}
grecord(calcout,"$(P)DeadTime1") {
        field(CALC, "MAX(MAX(MAX(A,B),C),D)")
        field(INPA,"$(P)mca5.IDTIM  CP MS")
        field(INPB,"$(P)mca6.IDTIM  CP MS")
        field(INPC,"$(P)mca7.IDTIM  CP MS")
        field(INPD,"$(P)mca8.IDTIM  CP MS")
}

grecord(dfanout,"$(P)ReadAll") {
        field(SCAN,"1 second")
        field(DISV,"0")
        field(SDIS,"$(P)Acquiring NPP NMS")
        field(VAL, "1")
        field(OUTA,"$(P)mca1.READ  CA MS")
        field(OUTB,"$(P)mca2.READ  CA MS")
        field(OUTC,"$(P)mca3.READ  CA MS")
        field(OUTD,"$(P)mca4.READ  CA MS")
        field(OUTE,"$(P)mca5.READ  CA MS")
        field(OUTF,"$(P)mca6.READ  CA MS")
        field(OUTG,"$(P)mca7.READ  CA MS")
        field(OUTH,"$(P)mca8.READ  CA MS")
}

grecord(dfanout,"$(P)ReadDXPs") {
        field(SCAN,"1 second")
        field(VAL, "1")
        field(OUTA,"$(P)dxp1.PROC  CA MS")
        field(OUTB,"$(P)dxp2.PROC  CA MS")
        field(OUTC,"$(P)dxp3.PROC  CA MS")
        field(OUTD,"$(P)dxp4.PROC  CA MS")
        field(OUTE,"$(P)dxp5.PROC  CA MS")
        field(OUTF,"$(P)dxp6.PROC  CA MS")
        field(OUTG,"$(P)dxp7.PROC  CA MS")
        field(OUTH,"$(P)dxp8.PROC  CA MS")
}

grecord(dfanout,"$(P)dxpCopyGain") {
        field(DOL, "$(P)dxp1.GAIN NPP NMS")
        field(OMSL,"closed_loop")
#        field(OUTA,"$(P)dxp1.GAIN  CA MS")
        field(OUTB,"$(P)dxp2.GAIN  CA MS")
        field(OUTC,"$(P)dxp3.GAIN  CA MS")
        field(OUTD,"$(P)dxp4.GAIN  CA MS")
        field(OUTE,"$(P)dxp5.GAIN  CA MS")
        field(OUTF,"$(P)dxp6.GAIN  CA MS")
        field(OUTG,"$(P)dxp7.GAIN  CA MS")
        field(OUTH,"$(P)dxp8.GAIN  CA MS")
}

grecord(dfanout,"$(P)dxpCopyEmax") {
        field(DOL, "$(P)dxp1.EMAX NPP NMS")
        field(OMSL,"closed_loop")
#        field(OUTA,"$(P)dxp1.EMAX  CA MS")
        field(OUTB,"$(P)dxp2.EMAX  CA MS")
        field(OUTC,"$(P)dxp3.EMAX  CA MS")
        field(OUTD,"$(P)dxp4.EMAX  CA MS")
        field(OUTE,"$(P)dxp5.EMAX  CA MS")
        field(OUTF,"$(P)dxp6.EMAX  CA MS")
        field(OUTG,"$(P)dxp7.EMAX  CA MS")
        field(OUTH,"$(P)dxp8.EMAX  CA MS")
}

grecord(dfanout,"$(P)dxpCopyPktm") {
        field(DOL, "$(P)dxp1.PKTM NPP NMS")
        field(OMSL,"closed_loop")
#        field(OUTA,"$(P)dxp1.PKTM  CA MS")
        field(OUTB,"$(P)dxp2.PKTM  CA MS")
        field(OUTC,"$(P)dxp3.PKTM  CA MS")
        field(OUTD,"$(P)dxp4.PKTM  CA MS")
        field(OUTE,"$(P)dxp5.PKTM  CA MS")
        field(OUTF,"$(P)dxp6.PKTM  CA MS")
        field(OUTG,"$(P)dxp7.PKTM  CA MS")
        field(OUTH,"$(P)dxp8.PKTM  CA MS")
}

grecord(dfanout,"$(P)dxpCopyFippi") {
        field(DOL, "$(P)dxp1.FIPPI NPP NMS")
        field(OMSL,"closed_loop")
#        field(OUTA,"$(P)dxp1.FIPPI  CA MS")
        field(OUTB,"$(P)dxp2.FIPPI  CA MS")
        field(OUTC,"$(P)dxp3.FIPPI  CA MS")
        field(OUTD,"$(P)dxp4.FIPPI  CA MS")
        field(OUTE,"$(P)dxp5.FIPPI  CA MS")
        field(OUTF,"$(P)dxp6.FIPPI  CA MS")
        field(OUTG,"$(P)dxp7.FIPPI  CA MS")
        field(OUTH,"$(P)dxp8.FIPPI  CA MS")
}


grecord(dfanout,"$(P)StatusAll") {
        field(SCAN,".5 second")
        field(DISV,"0")
        field(SDIS,"$(P)Acquiring NPP NMS")
        field(VAL, "1")
        field(OUTA,"$(P)mca1.PROC  CA MS")
        field(OUTB,"$(P)mca2.PROC  CA MS")
        field(OUTC,"$(P)mca3.PROC  CA MS")
        field(OUTD,"$(P)mca4.PROC  CA MS")
        field(OUTE,"$(P)mca5.PROC  CA MS")
        field(OUTF,"$(P)mca6.PROC  CA MS")
        field(OUTG,"$(P)mca7.PROC  CA MS")
        field(OUTH,"$(P)mca8.PROC  CA MS")
}


# These records are for waiting for IDL or other clients
grecord(bo,"$(P)EnableClientWait") {
        field(ZNAM,"Disable")
        field(ONAM,"Enable")
}

grecord(bo,"$(P)SetClientWait") {
        field(DISV,"0")
        field(SDIS,"$(P)EnableClientWait NPP NMS")
        field(OMSL,"closed_loop")
        field(DOL,"1")
        field(OUT,"$(P)ClientWait PP MS")
}

grecord(busy,"$(P)ClientWait") {
}

# These records are not used, but they must exist for the IDL EPICS_MED class
grecord(ao,"$(P)Dwell") {}
grecord(bo,"$(P)ChannelAdvance") {}
grecord(ao,"$(P)Prescale") {}
