file "$(DXP)/dxpApp/Db/dxpSystem.template" {
{P=dxp2X:, IO="@asyn(DXP1,0)"}
}

file "$(DXP)/dxpApp/Db/dxpMED.template" {
{P=dxp2X:, DETALL="@asyn(DXP1,16,1)"} 
}

# DXP parameters
file "$(DXP)/dxpApp/Db/dxpHighLevel.template"
{
pattern
{       P,       R,           IO}
{dxp2X:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxp2X:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxp2X:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxp2X:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxp2X:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxp2X:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxp2X:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxp2X:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxp2X:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxp2X:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxp2X:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxp2X:,   dxp12:,  "@asyn(DXP1,11,1)"}
{dxp2X:,   dxp13:,  "@asyn(DXP1,12,1)"}
{dxp2X:,   dxp14:,  "@asyn(DXP1,13,1)"}
{dxp2X:,   dxp15:,  "@asyn(DXP1,14,1)"}
{dxp2X:,   dxp16:,  "@asyn(DXP1,15,1)"}
}

# DXP2X specific parameters
file "$(DXP)/dxpApp/Db/dxpDXP2X.template"
{
pattern
{       P,       R,           IO}
{dxp2X:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxp2X:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxp2X:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxp2X:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxp2X:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxp2X:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxp2X:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxp2X:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxp2X:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxp2X:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxp2X:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxp2X:,   dxp12:,  "@asyn(DXP1,11,1)"}
{dxp2X:,   dxp13:,  "@asyn(DXP1,12,1)"}
{dxp2X:,   dxp14:,  "@asyn(DXP1,13,1)"}
{dxp2X:,   dxp15:,  "@asyn(DXP1,14,1)"}
{dxp2X:,   dxp16:,  "@asyn(DXP1,15,1)"}
}

# Low-level parameters
file "$(DXP)/dxpApp/Db/dxpLowLevel.template"
{
pattern
{       P,       R,        IO}
{dxp2X:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxp2X:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxp2X:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxp2X:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxp2X:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxp2X:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxp2X:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxp2X:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxp2X:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxp2X:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxp2X:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxp2X:,   dxp12:,  "@asyn(DXP1,11,1)"}
{dxp2X:,   dxp13:,  "@asyn(DXP1,12,1)"}
{dxp2X:,   dxp14:,  "@asyn(DXP1,13,1)"}
{dxp2X:,   dxp15:,  "@asyn(DXP1,14,1)"}
{dxp2X:,   dxp16:,  "@asyn(DXP1,15,1)"}
}

# SCA parameters
file "$(DXP)/dxpApp/Db/dxpSCA_16.template"
{
pattern
{       P,       R,          IO}
{dxp2X:,    dxp1:,  "@asyn(DXP1,0,1)"}
{dxp2X:,    dxp2:,  "@asyn(DXP1,1,1)"}
{dxp2X:,    dxp3:,  "@asyn(DXP1,2,1)"}
{dxp2X:,    dxp4:,  "@asyn(DXP1,3,1)"}
{dxp2X:,    dxp5:,  "@asyn(DXP1,4,1)"}
{dxp2X:,    dxp6:,  "@asyn(DXP1,5,1)"}
{dxp2X:,    dxp7:,  "@asyn(DXP1,6,1)"}
{dxp2X:,    dxp8:,  "@asyn(DXP1,7,1)"}
{dxp2X:,    dxp9:,  "@asyn(DXP1,8,1)"}
{dxp2X:,   dxp10:,  "@asyn(DXP1,9,1)"}
{dxp2X:,   dxp11:,  "@asyn(DXP1,10,1)"}
{dxp2X:,   dxp12:,  "@asyn(DXP1,11,1)"}
{dxp2X:,   dxp13:,  "@asyn(DXP1,12,1)"}
{dxp2X:,   dxp14:,  "@asyn(DXP1,13,1)"}
{dxp2X:,   dxp15:,  "@asyn(DXP1,14,1)"}
{dxp2X:,   dxp16:,  "@asyn(DXP1,15,1)"}
}


file "$(MCA)/mcaApp/Db/simple_mca.db"
{
pattern
{       P,      M,       DTYP,               INP,  PREC,    CHANS}
{dxp2X:,   mca1,  "asynMCA",   "@asyn(DXP1,0)",     2,     2048}
{dxp2X:,   mca2,  "asynMCA",   "@asyn(DXP1,1)",     2,     2048}
{dxp2X:,   mca3,  "asynMCA",   "@asyn(DXP1,2)",     2,     2048}
{dxp2X:,   mca4,  "asynMCA",   "@asyn(DXP1,3)",     2,     2048}
{dxp2X:,   mca5,  "asynMCA",   "@asyn(DXP1,4)",     2,     2048}
{dxp2X:,   mca6,  "asynMCA",   "@asyn(DXP1,5)",     2,     2048}
{dxp2X:,   mca7,  "asynMCA",   "@asyn(DXP1,6)",     2,     2048}
{dxp2X:,   mca8,  "asynMCA",   "@asyn(DXP1,7)",     2,     2048}
{dxp2X:,   mca9,  "asynMCA",   "@asyn(DXP1,8)",     2,     2048}
{dxp2X:,  mca10,  "asynMCA",   "@asyn(DXP1,9)",     2,     2048}
{dxp2X:,  mca11,  "asynMCA",  "@asyn(DXP1,10)",     2,     2048}
{dxp2X:,  mca12,  "asynMCA",  "@asyn(DXP1,11)",     2,     2048}
{dxp2X:,  mca13,  "asynMCA",  "@asyn(DXP1,12)",     2,     2048}
{dxp2X:,  mca14,  "asynMCA",  "@asyn(DXP1,13)",     2,     2048}
{dxp2X:,  mca15,  "asynMCA",  "@asyn(DXP1,14)",     2,     2048}
{dxp2X:,  mca16,  "asynMCA",  "@asyn(DXP1,15)",     2,     2048}
}

file "$(ASYN)/db/asynRecord.db"
{
pattern
{       P,    R,  PORT,   ADDR,  IMAX,  OMAX}
{dxp2X:, Asyn,  DXP1,      0,    80,    80}
}
